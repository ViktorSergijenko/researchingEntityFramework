// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WindowsFormsApp1.AppContext;

namespace WindowsFormsApp1.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview3.19153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WindowsFormsApp1.Models.Acessuary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("Acessuarys");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Ammo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<Guid>("WeaponTypeId");

                    b.HasKey("Id");

                    b.HasIndex("WeaponTypeId");

                    b.ToTable("Ammos");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.AmmoShop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("ShopName");

                    b.Property<string>("WorkTime");

                    b.HasKey("Id");

                    b.ToTable("AmmoShops");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LicenseNumber");

                    b.Property<string>("Name");

                    b.Property<string>("PersCode");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AmmoShopId");

                    b.Property<Guid?>("EmployeeId");

                    b.Property<string>("FullName");

                    b.Property<string>("PersCode");

                    b.Property<Guid?>("ReportsTo");

                    b.HasKey("Id");

                    b.HasIndex("AmmoShopId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ReportsTo");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AcessuaryId");

                    b.Property<Guid>("AmmoId");

                    b.Property<Guid>("AmmoShopId");

                    b.Property<int>("AmountOfAcessuary");

                    b.Property<int>("AmountOfAmmo");

                    b.Property<int>("AmountOfWeapon");

                    b.Property<Guid>("CustomerId");

                    b.Property<Guid>("EmployeeId");

                    b.Property<decimal>("TotalPrice");

                    b.Property<Guid>("WeaponId");

                    b.HasKey("Id");

                    b.HasIndex("AcessuaryId");

                    b.HasIndex("AmmoId");

                    b.HasIndex("AmmoShopId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<Guid>("WeaponTypeId");

                    b.HasKey("Id");

                    b.HasIndex("WeaponTypeId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.WeaponType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("WeaponTypes");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Ammo", b =>
                {
                    b.HasOne("WindowsFormsApp1.Models.WeaponType", "WeaponTypes")
                        .WithMany("Ammo")
                        .HasForeignKey("WeaponTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Employee", b =>
                {
                    b.HasOne("WindowsFormsApp1.Models.AmmoShop", "AmmoShop")
                        .WithMany("Employees")
                        .HasForeignKey("AmmoShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WindowsFormsApp1.Models.Employee")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("WindowsFormsApp1.Models.Employee", "Boss")
                        .WithMany()
                        .HasForeignKey("ReportsTo");
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Purchases", b =>
                {
                    b.HasOne("WindowsFormsApp1.Models.Acessuary", "Acessuary")
                        .WithMany("Purchases")
                        .HasForeignKey("AcessuaryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WindowsFormsApp1.Models.Ammo", "Ammo")
                        .WithMany("Purchases")
                        .HasForeignKey("AmmoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WindowsFormsApp1.Models.AmmoShop", "AmmoShop")
                        .WithMany("Purchases")
                        .HasForeignKey("AmmoShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WindowsFormsApp1.Models.Customer", "Customer")
                        .WithMany("Purchases")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WindowsFormsApp1.Models.Employee", "Employee")
                        .WithMany("Purchases")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WindowsFormsApp1.Models.Weapon", "Weapon")
                        .WithMany("Purchases")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WindowsFormsApp1.Models.Weapon", b =>
                {
                    b.HasOne("WindowsFormsApp1.Models.WeaponType", "WeaponType")
                        .WithMany("Weapons")
                        .HasForeignKey("WeaponTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
